<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <default-servlet-handler/> 태그 미사용시 
		방법1] wepapp/reosurces디렉토리에만 스태틱 리소스를 넣거나 
		방법2] wepapp아래 리소스 종류별로 디렉토리 생성후 
		<resources mapping="/접근URL/**" location="/디렉토리명/" 
		/>식으로 계속 추가해 주어야한다. 
		방법3] <default-servlet-handler/>태그 추가 
	-->
		<!--  
		mapping 속성 : HTML에서 경로지정시 사용할 가상의 이름 
		location:wepapp아래의 실제 디렉토리 경로 -->
	<!--방법1] -->
	<!--  
	<resources mapping="/resources/**" location="/resources/" />
	-->
	<!--resources 매핑이름을 static으로 변경 html에서는 static으로 경로지정 -->	
	<!--  
	<resources mapping="/static/**" location="/resources/" />
	-->
	<!-- 방법2] -->
	<!-- 
	<resources location="/resources/images/" mapping="/images/**"/>
	<resources location="/resources/styles/" mapping="/styles/**"/>
	-->
	<!-- 방법3] webapp아래 아무곳이나 폴더를 만들어 리소스를 두도록 설정 추가 -->
	<!-- webapp의 어느 디렉토리에 스태틱 리소스(이미지,.css,.js등)를 두더라도 읽어 올수 있도록 설정하는 부분 -->
	<default-servlet-handler/>
	
	
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	<context:component-scan base-package="com.kosmo.springapp.onememo" />
	<context:property-placeholder location="classpath:onememo/resource/onememo.properties"/>
	<beans:bean class="com.fasterxml.jackson.databind.ObjectMapper"/>
</beans:beans>
