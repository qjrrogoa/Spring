<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- namespace 속성 : 매퍼파일의 완전한 경로를 넣음. .xml은 생략
	 ※ ibatis와는 다르게 id값에 .(dot)을 사용 못한다.	 -->
<mapper namespace="onememo.mybatis.mapper.onememo">

	<!-- resultMap사용시 column속성이 필수임 : ibatis와 다르다. -->
	<resultMap type="OneMemoDTO" id="oneMemoDTOResult">
<!--  	column : 테이블의 컬럼명 (SELECT 결과의 컬럼명을 의미) [DB]
		property : 자바빈(DTO)의 속성명 [JAVA]				 -->
		<result column="no" property="no" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="postdate" property="postDate" />
		<result column="id" property="id" />
		<result column="commentcount" property="commentCount" />
		
<!-- 	1:N 관계 매핑용
		column : JOIN할때의 컬럼명
		select : 자식테이블에서 조인시 컬럼명으로 조회시 쿼리문 id (.xml의 주소에서 .xml을 빼고 .메소드명)
		javaType : OneMemoDTO의 자식 레코드를 담을 컬렉션 타입
		ofType : 자식의 DTO타입
-->
		 <collection property="comments" column="no" javaType="List"
		 ofType="com.kosmo.springapp.onememo.service.LineCommentDTO"
		 select="onememo.mybatis.mapper.linecomment.commentSelectList2"/>
	</resultMap>
<!-- 
   [쿼리문 작성법]
   A. 값에 해당하는 부분은 #{변수}
   B. 객체에 해당하는 부분은 ${변수} 객체는 테이블명 혹은 컬럼명등을 의미
   C. #{변수} 작성시 parameterType이 Map인 경우는
   	  키값을 자바빈(DTO계열)인 경우는 자바빈의 속성명(멤버변수명)이어야 한다.
      단, parameterType이 int나 String인 경우는 임의값을 줘도 무방하다.
   D. 쿼리문안에  >, >=, <, <= 등의 비교 연산자를 사용하는 경우 에러
        1. <![CDATA[     ]]> CDATA섹션을 사용하거나
           예] 
           SELECT * FROM emp
           <![CDATA[ 
           WHERE sal >= 3000
           ]]>
           CDATA섹션의 문자열은 단순 텍스트로 처리한다
        2. 특수문자를 사용한다 즉 >은 &gt; < 은 &lt;
           예]  SELECT * FROM emp
          	   WHERE sal &gt;= 3000
-->
	<!-- id : 키, parameterType : 넘겨받는 파라미터의 자료형, resultType : 돌려줄 값의 자료형 -->
	<select id="memoIsLogin" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM MEMBER WHERE id=#{id} AND pwd=#{pwd}
	</select>
	<select id="memoSelectList" parameterType="Map" resultType="oneMemoDTO">
		SELECT * FROM(SELECT T.*,ROWNUM R FROM (SELECT o.*,m.name,(SELECT COUNT(*) FROM linecomments WHERE no=o.no) as commentcount FROM onememo o JOIN member m ON m.id=o.id 
		<if test="serachWord != null">
			WHERE ${searchColumn} LIKE '%' || #{searchWord} || '%'
		</if>
		ORDER BY NO DESC) T) WHERE R BETWEEN #{start} AND #{end}
	</select>
	<select id="memoTotalCount" parameterType="Map" resultType="int">
	 	SELECT COUNT(*) FROM onememo o JOIN member m ON o.id=m.id
	</select>
	<insert id="memoInsert" parameterType="java.util.Map">
		INSERT INTO onememo VALUES(SEQ_ONEMEMO.NEXTVAL, #{title}, #{content},DEFAULT,#{id})
	</insert>
	<select id="memoSelectOne" parameterType="Map" resultMap="oneMemoDTOResult">
		SELECT o.*,m.name FROM member m JOIN onememo o ON m.id=o.id WHERE no = #{no}
	</select>
	<select id="memoFindNameById" parameterType="String" resultType="String">
		SELECT name FROM member WHERE id=#{id}
	</select>
	<delete id="memoDelete" parameterType="Map">
		DELETE onememo WHERE no=#{no}
	</delete>
	<update id="memoUpdate" parameterType="Map">
		UPDATE onememo SET content=#{content}, title=#{title} WHERE no=#{no}
	</update>

	
</mapper>